@page "/cockieClicker"
@using Microsoft.AspNetCore.SignalR.Client;
@using Microsoft.AspNetCore.SignalR;

<PageTitle>Counters</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>
<p role="status">Response: @response</p>
<p role="status">Is Connected: @IsConnected</p>

<button class="btn btn-primary" @onclick="BuyBuilding">Test</button>


@code {


    private int currentCount = 0;

    public bool IsConnected =>
        connection?.State == HubConnectionState.Connected;

    private HubConnectionBuilder builder;

    private HubConnection connection;

    private string response = "no response yet";

    protected override async Task OnInitializedAsync()
    {

        builder = new HubConnectionBuilder();

        builder.WithUrl("Https://localhost:5001/hub");

        connection = builder.Build();


        Action<string> buyBuildingResponse = (response) =>
        {
            this.response = response;
            this.response += DateTime.Now +":"+ DateTime.Now.Millisecond;
            InvokeAsync(StateHasChanged);
        };

        connection.On("BuyBuildingResponse", buyBuildingResponse);

        Action<int> balanceUpdate = (balance) =>
        {
            currentCount = balance;
            InvokeAsync(StateHasChanged);
        };

        connection.On("BalanceUpdate", balanceUpdate);

        await connection.StartAsync();
    }

    private async void BuyBuilding()
    {

        if (connection is not null)
        {

            object[] parameters = new[] { "Candy Store", connection.ConnectionId };

            await connection.InvokeCoreAsync("BuyBuilding", parameters);

            
        }


    }

}



